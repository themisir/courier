@page
@using System.Globalization
@model Courier.Pages.Account.PersonalTokens
@{
    ViewData["Title"] = "Personal Tokens";
    ViewData["Navigation"] = "Account";
}

@section PageTitle
{
    <div class="page-header">
        <div class="row align-items-center">
            <div class="col">
                <div class="page-pretitle">
                    Account
                </div>
                <h2 class="page-title">
                    Personal tokens
                </h2>
            </div>
            <div class="col-auto ms-auto">
                <div class="btn-list">
                    <a href="#" class="btn btn-primary d-none d-sm-inline-block" data-bs-toggle="modal" data-bs-target="#modal-create">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-plus" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <line x1="12" y1="5" x2="12" y2="19"></line>
                            <line x1="5" y1="12" x2="19" y2="12"></line>
                        </svg>
                        New token
                    </a>
                </div>
            </div>
        </div>
    </div>
}

<form method="post">
    <div class="modal modal-blur fade" id="modal-create">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Issue a new token</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label asp-for="Input.Description"></label>
                        <input asp-for="Input.Description" class="form-control" autocomplete="off" required/>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Input.ExpiresAt"></label>
                        <input asp-for="Input.ExpiresAt" type="datetime-local" class="form-control"/>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn me-auto" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="card">
    <div class="card-header row">
        <h3 class="card-title col">Personal tokens</h3>
    </div>
    <div class="list-group list-group-flush">
        @if (Model.IssuedToken != null)
        {
            <a href="#" onclick="copyToClipboard('@Model.IssuedToken.Token');" class="list-group-item list-group-item-action active" aria-current="true">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@Model.IssuedToken.Token</h5>
                    <small id="click-to-copy" data-default-text="Click to copy" data-toggled-text="Copied">Click to copy</small>
                </div>
                <p class="mb-1">@Model.IssuedToken.Description</p>
                <small>@Model.IssuedToken.CreatedAt.ToString(CultureInfo.InvariantCulture)</small>
            </a>
        }

        @foreach (var token in Model.Tokens)
        {
            <div class="list-group-item d-flex flex-row justify-content-between align-items-center">
                <div>
                    <p class="mb-1">@token.Description</p>
                    @{
                        var issuedAt = token.CreatedAt.ToString(CultureInfo.InvariantCulture);
                        var title = $"Issued at: {token.CreatedAt.ToString(CultureInfo.InvariantCulture)}";
                        if (token.ExpiresAt is not null)
                        {
                            title += $"\nExpires at: {token.ExpiresAt.Value.ToString(CultureInfo.InvariantCulture)}";
                        }
                    }
                    <small class="text-muted" title="@title">@issuedAt</small>
                </div>
                <div>
                    <form asp-page-handler="Remove" asp-route-tokenId="@token.Id" method="post" data-confirm-before-submit="Are you sure to remove this token?">
                        <button type="submit" class="btn btn-danger">Remove</button>
                    </form>
                </div>
            </div>
        }

        @if (Model.Tokens.Count == 0)
        {
            <div class="empty">
                <div class="empty-img">
                    <img src="~/assets/img/undraw_secure_server_re_8wsq.svg" height="128" alt="My documents illustration">
                </div>
                <p class="empty-title">Your personal tokens</p>
                <p class="empty-subtitle text-muted">
                    You can use personal tokens to authenticate with pub CLI to download and upload a new packages.
                </p>
                <div class="empty-action">
                    <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal-create">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-plus" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <line x1="12" y1="5" x2="12" y2="19"></line>
                            <line x1="5" y1="12" x2="19" y2="12"></line>
                        </svg>
                        Create token
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
    function copyToClipboard(text) {
        const type = "text/plain";
        const blob = new Blob([text], { type });
        const data = [new ClipboardItem({ [type]: blob })];
        navigator.clipboard.write(data).then(function () {
            const clickToCopy = document.getElementById('click-to-copy');
            clickToCopy.textContent = clickToCopy.getAttribute('data-toggled-text');
            setTimeout(function () {
                clickToCopy.textContent = clickToCopy.getAttribute('data-default-text');
            }, 2000);
        });
    }
    </script>
}